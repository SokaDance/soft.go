// Code generated by mockery v2.16.0. DO NOT EDIT.

package ecore

import mock "github.com/stretchr/testify/mock"

// MockEObjectList is an autogenerated mock type for the EObjectList type
type MockEObjectList struct {
	mock.Mock
}

type MockEObjectList_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEObjectList) EXPECT() *MockEObjectList_Expecter {
	return &MockEObjectList_Expecter{mock: &_m.Mock}
}

// GetUnResolvedList provides a mock function with given fields:
func (_m *MockEObjectList) GetUnResolvedList() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEObjectList_GetUnResolvedList_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetUnResolvedList'
type MockEObjectList_GetUnResolvedList_Call struct {
	*mock.Call
}

// GetUnResolvedList is a helper method to define mock.On call
func (_e *MockEObjectList_Expecter) GetUnResolvedList() *MockEObjectList_GetUnResolvedList_Call {
	return &MockEObjectList_GetUnResolvedList_Call{Call: _e.mock.On("GetUnResolvedList")}
}

func (_c *MockEObjectList_GetUnResolvedList_Call) Run(run func()) *MockEObjectList_GetUnResolvedList_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEObjectList_GetUnResolvedList_Call) Return(_a0 EList) *MockEObjectList_GetUnResolvedList_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewMockEObjectList interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEObjectList creates a new instance of MockEObjectList. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEObjectList(t mockConstructorTestingTNewMockEObjectList) *MockEObjectList {
	mock := &MockEObjectList{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
