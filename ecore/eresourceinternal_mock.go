// Code generated by mockery v2.16.0. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MockEResourceInternal is an autogenerated mock type for the EResourceInternal type
type MockEResourceInternal struct {
	mock.Mock
}

type MockEResourceInternal_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEResourceInternal) EXPECT() *MockEResourceInternal_Expecter {
	return &MockEResourceInternal_Expecter{mock: &_m.Mock}
}

// Attached provides a mock function with given fields: object
func (_m *MockEResourceInternal) Attached(object EObject) {
	_m.Called(object)
}

// MockEResourceInternal_Attached_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Attached'
type MockEResourceInternal_Attached_Call struct {
	*mock.Call
}

// Attached is a helper method to define mock.On call
//   - object EObject
func (_e *MockEResourceInternal_Expecter) Attached(object interface{}) *MockEResourceInternal_Attached_Call {
	return &MockEResourceInternal_Attached_Call{Call: _e.mock.On("Attached", object)}
}

func (_c *MockEResourceInternal_Attached_Call) Run(run func(object EObject)) *MockEResourceInternal_Attached_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EObject))
	})
	return _c
}

func (_c *MockEResourceInternal_Attached_Call) Return() *MockEResourceInternal_Attached_Call {
	_c.Call.Return()
	return _c
}

// BasicSetLoaded provides a mock function with given fields: _a0, _a1
func (_m *MockEResourceInternal) BasicSetLoaded(_a0 bool, _a1 ENotificationChain) ENotificationChain {
	ret := _m.Called(_a0, _a1)

	var r0 ENotificationChain
	if rf, ok := ret.Get(0).(func(bool, ENotificationChain) ENotificationChain); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ENotificationChain)
		}
	}

	return r0
}

// MockEResourceInternal_BasicSetLoaded_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BasicSetLoaded'
type MockEResourceInternal_BasicSetLoaded_Call struct {
	*mock.Call
}

// BasicSetLoaded is a helper method to define mock.On call
//   - _a0 bool
//   - _a1 ENotificationChain
func (_e *MockEResourceInternal_Expecter) BasicSetLoaded(_a0 interface{}, _a1 interface{}) *MockEResourceInternal_BasicSetLoaded_Call {
	return &MockEResourceInternal_BasicSetLoaded_Call{Call: _e.mock.On("BasicSetLoaded", _a0, _a1)}
}

func (_c *MockEResourceInternal_BasicSetLoaded_Call) Run(run func(_a0 bool, _a1 ENotificationChain)) *MockEResourceInternal_BasicSetLoaded_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bool), args[1].(ENotificationChain))
	})
	return _c
}

func (_c *MockEResourceInternal_BasicSetLoaded_Call) Return(_a0 ENotificationChain) *MockEResourceInternal_BasicSetLoaded_Call {
	_c.Call.Return(_a0)
	return _c
}

// BasicSetResourceSet provides a mock function with given fields: _a0, _a1
func (_m *MockEResourceInternal) BasicSetResourceSet(_a0 EResourceSet, _a1 ENotificationChain) ENotificationChain {
	ret := _m.Called(_a0, _a1)

	var r0 ENotificationChain
	if rf, ok := ret.Get(0).(func(EResourceSet, ENotificationChain) ENotificationChain); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ENotificationChain)
		}
	}

	return r0
}

// MockEResourceInternal_BasicSetResourceSet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'BasicSetResourceSet'
type MockEResourceInternal_BasicSetResourceSet_Call struct {
	*mock.Call
}

// BasicSetResourceSet is a helper method to define mock.On call
//   - _a0 EResourceSet
//   - _a1 ENotificationChain
func (_e *MockEResourceInternal_Expecter) BasicSetResourceSet(_a0 interface{}, _a1 interface{}) *MockEResourceInternal_BasicSetResourceSet_Call {
	return &MockEResourceInternal_BasicSetResourceSet_Call{Call: _e.mock.On("BasicSetResourceSet", _a0, _a1)}
}

func (_c *MockEResourceInternal_BasicSetResourceSet_Call) Run(run func(_a0 EResourceSet, _a1 ENotificationChain)) *MockEResourceInternal_BasicSetResourceSet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EResourceSet), args[1].(ENotificationChain))
	})
	return _c
}

func (_c *MockEResourceInternal_BasicSetResourceSet_Call) Return(_a0 ENotificationChain) *MockEResourceInternal_BasicSetResourceSet_Call {
	_c.Call.Return(_a0)
	return _c
}

// Detached provides a mock function with given fields: object
func (_m *MockEResourceInternal) Detached(object EObject) {
	_m.Called(object)
}

// MockEResourceInternal_Detached_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Detached'
type MockEResourceInternal_Detached_Call struct {
	*mock.Call
}

// Detached is a helper method to define mock.On call
//   - object EObject
func (_e *MockEResourceInternal_Expecter) Detached(object interface{}) *MockEResourceInternal_Detached_Call {
	return &MockEResourceInternal_Detached_Call{Call: _e.mock.On("Detached", object)}
}

func (_c *MockEResourceInternal_Detached_Call) Run(run func(object EObject)) *MockEResourceInternal_Detached_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EObject))
	})
	return _c
}

func (_c *MockEResourceInternal_Detached_Call) Return() *MockEResourceInternal_Detached_Call {
	_c.Call.Return()
	return _c
}

// DoAttached provides a mock function with given fields: o
func (_m *MockEResourceInternal) DoAttached(o EObject) {
	_m.Called(o)
}

// MockEResourceInternal_DoAttached_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoAttached'
type MockEResourceInternal_DoAttached_Call struct {
	*mock.Call
}

// DoAttached is a helper method to define mock.On call
//   - o EObject
func (_e *MockEResourceInternal_Expecter) DoAttached(o interface{}) *MockEResourceInternal_DoAttached_Call {
	return &MockEResourceInternal_DoAttached_Call{Call: _e.mock.On("DoAttached", o)}
}

func (_c *MockEResourceInternal_DoAttached_Call) Run(run func(o EObject)) *MockEResourceInternal_DoAttached_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EObject))
	})
	return _c
}

func (_c *MockEResourceInternal_DoAttached_Call) Return() *MockEResourceInternal_DoAttached_Call {
	_c.Call.Return()
	return _c
}

// DoDetached provides a mock function with given fields: o
func (_m *MockEResourceInternal) DoDetached(o EObject) {
	_m.Called(o)
}

// MockEResourceInternal_DoDetached_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoDetached'
type MockEResourceInternal_DoDetached_Call struct {
	*mock.Call
}

// DoDetached is a helper method to define mock.On call
//   - o EObject
func (_e *MockEResourceInternal_Expecter) DoDetached(o interface{}) *MockEResourceInternal_DoDetached_Call {
	return &MockEResourceInternal_DoDetached_Call{Call: _e.mock.On("DoDetached", o)}
}

func (_c *MockEResourceInternal_DoDetached_Call) Run(run func(o EObject)) *MockEResourceInternal_DoDetached_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EObject))
	})
	return _c
}

func (_c *MockEResourceInternal_DoDetached_Call) Return() *MockEResourceInternal_DoDetached_Call {
	_c.Call.Return()
	return _c
}

// DoLoad provides a mock function with given fields: decoder
func (_m *MockEResourceInternal) DoLoad(decoder EResourceDecoder) {
	_m.Called(decoder)
}

// MockEResourceInternal_DoLoad_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoLoad'
type MockEResourceInternal_DoLoad_Call struct {
	*mock.Call
}

// DoLoad is a helper method to define mock.On call
//   - decoder EResourceDecoder
func (_e *MockEResourceInternal_Expecter) DoLoad(decoder interface{}) *MockEResourceInternal_DoLoad_Call {
	return &MockEResourceInternal_DoLoad_Call{Call: _e.mock.On("DoLoad", decoder)}
}

func (_c *MockEResourceInternal_DoLoad_Call) Run(run func(decoder EResourceDecoder)) *MockEResourceInternal_DoLoad_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EResourceDecoder))
	})
	return _c
}

func (_c *MockEResourceInternal_DoLoad_Call) Return() *MockEResourceInternal_DoLoad_Call {
	_c.Call.Return()
	return _c
}

// DoSave provides a mock function with given fields: encoder
func (_m *MockEResourceInternal) DoSave(encoder EResourceEncoder) {
	_m.Called(encoder)
}

// MockEResourceInternal_DoSave_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoSave'
type MockEResourceInternal_DoSave_Call struct {
	*mock.Call
}

// DoSave is a helper method to define mock.On call
//   - encoder EResourceEncoder
func (_e *MockEResourceInternal_Expecter) DoSave(encoder interface{}) *MockEResourceInternal_DoSave_Call {
	return &MockEResourceInternal_DoSave_Call{Call: _e.mock.On("DoSave", encoder)}
}

func (_c *MockEResourceInternal_DoSave_Call) Run(run func(encoder EResourceEncoder)) *MockEResourceInternal_DoSave_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EResourceEncoder))
	})
	return _c
}

func (_c *MockEResourceInternal_DoSave_Call) Return() *MockEResourceInternal_DoSave_Call {
	_c.Call.Return()
	return _c
}

// DoUnload provides a mock function with given fields:
func (_m *MockEResourceInternal) DoUnload() {
	_m.Called()
}

// MockEResourceInternal_DoUnload_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DoUnload'
type MockEResourceInternal_DoUnload_Call struct {
	*mock.Call
}

// DoUnload is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) DoUnload() *MockEResourceInternal_DoUnload_Call {
	return &MockEResourceInternal_DoUnload_Call{Call: _e.mock.On("DoUnload")}
}

func (_c *MockEResourceInternal_DoUnload_Call) Run(run func()) *MockEResourceInternal_DoUnload_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_DoUnload_Call) Return() *MockEResourceInternal_DoUnload_Call {
	_c.Call.Return()
	return _c
}

// EAdapters provides a mock function with given fields:
func (_m *MockEResourceInternal) EAdapters() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceInternal_EAdapters_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EAdapters'
type MockEResourceInternal_EAdapters_Call struct {
	*mock.Call
}

// EAdapters is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) EAdapters() *MockEResourceInternal_EAdapters_Call {
	return &MockEResourceInternal_EAdapters_Call{Call: _e.mock.On("EAdapters")}
}

func (_c *MockEResourceInternal_EAdapters_Call) Run(run func()) *MockEResourceInternal_EAdapters_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_EAdapters_Call) Return(_a0 EList) *MockEResourceInternal_EAdapters_Call {
	_c.Call.Return(_a0)
	return _c
}

// EDeliver provides a mock function with given fields:
func (_m *MockEResourceInternal) EDeliver() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockEResourceInternal_EDeliver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EDeliver'
type MockEResourceInternal_EDeliver_Call struct {
	*mock.Call
}

// EDeliver is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) EDeliver() *MockEResourceInternal_EDeliver_Call {
	return &MockEResourceInternal_EDeliver_Call{Call: _e.mock.On("EDeliver")}
}

func (_c *MockEResourceInternal_EDeliver_Call) Run(run func()) *MockEResourceInternal_EDeliver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_EDeliver_Call) Return(_a0 bool) *MockEResourceInternal_EDeliver_Call {
	_c.Call.Return(_a0)
	return _c
}

// ENotify provides a mock function with given fields: _a0
func (_m *MockEResourceInternal) ENotify(_a0 ENotification) {
	_m.Called(_a0)
}

// MockEResourceInternal_ENotify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ENotify'
type MockEResourceInternal_ENotify_Call struct {
	*mock.Call
}

// ENotify is a helper method to define mock.On call
//   - _a0 ENotification
func (_e *MockEResourceInternal_Expecter) ENotify(_a0 interface{}) *MockEResourceInternal_ENotify_Call {
	return &MockEResourceInternal_ENotify_Call{Call: _e.mock.On("ENotify", _a0)}
}

func (_c *MockEResourceInternal_ENotify_Call) Run(run func(_a0 ENotification)) *MockEResourceInternal_ENotify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ENotification))
	})
	return _c
}

func (_c *MockEResourceInternal_ENotify_Call) Return() *MockEResourceInternal_ENotify_Call {
	_c.Call.Return()
	return _c
}

// ESetDeliver provides a mock function with given fields: _a0
func (_m *MockEResourceInternal) ESetDeliver(_a0 bool) {
	_m.Called(_a0)
}

// MockEResourceInternal_ESetDeliver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ESetDeliver'
type MockEResourceInternal_ESetDeliver_Call struct {
	*mock.Call
}

// ESetDeliver is a helper method to define mock.On call
//   - _a0 bool
func (_e *MockEResourceInternal_Expecter) ESetDeliver(_a0 interface{}) *MockEResourceInternal_ESetDeliver_Call {
	return &MockEResourceInternal_ESetDeliver_Call{Call: _e.mock.On("ESetDeliver", _a0)}
}

func (_c *MockEResourceInternal_ESetDeliver_Call) Run(run func(_a0 bool)) *MockEResourceInternal_ESetDeliver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bool))
	})
	return _c
}

func (_c *MockEResourceInternal_ESetDeliver_Call) Return() *MockEResourceInternal_ESetDeliver_Call {
	_c.Call.Return()
	return _c
}

// GetAllContents provides a mock function with given fields:
func (_m *MockEResourceInternal) GetAllContents() EIterator {
	ret := _m.Called()

	var r0 EIterator
	if rf, ok := ret.Get(0).(func() EIterator); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EIterator)
		}
	}

	return r0
}

// MockEResourceInternal_GetAllContents_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllContents'
type MockEResourceInternal_GetAllContents_Call struct {
	*mock.Call
}

// GetAllContents is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetAllContents() *MockEResourceInternal_GetAllContents_Call {
	return &MockEResourceInternal_GetAllContents_Call{Call: _e.mock.On("GetAllContents")}
}

func (_c *MockEResourceInternal_GetAllContents_Call) Run(run func()) *MockEResourceInternal_GetAllContents_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetAllContents_Call) Return(_a0 EIterator) *MockEResourceInternal_GetAllContents_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetContents provides a mock function with given fields:
func (_m *MockEResourceInternal) GetContents() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceInternal_GetContents_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetContents'
type MockEResourceInternal_GetContents_Call struct {
	*mock.Call
}

// GetContents is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetContents() *MockEResourceInternal_GetContents_Call {
	return &MockEResourceInternal_GetContents_Call{Call: _e.mock.On("GetContents")}
}

func (_c *MockEResourceInternal_GetContents_Call) Run(run func()) *MockEResourceInternal_GetContents_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetContents_Call) Return(_a0 EList) *MockEResourceInternal_GetContents_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetEObject provides a mock function with given fields: _a0
func (_m *MockEResourceInternal) GetEObject(_a0 string) EObject {
	ret := _m.Called(_a0)

	var r0 EObject
	if rf, ok := ret.Get(0).(func(string) EObject); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EObject)
		}
	}

	return r0
}

// MockEResourceInternal_GetEObject_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEObject'
type MockEResourceInternal_GetEObject_Call struct {
	*mock.Call
}

// GetEObject is a helper method to define mock.On call
//   - _a0 string
func (_e *MockEResourceInternal_Expecter) GetEObject(_a0 interface{}) *MockEResourceInternal_GetEObject_Call {
	return &MockEResourceInternal_GetEObject_Call{Call: _e.mock.On("GetEObject", _a0)}
}

func (_c *MockEResourceInternal_GetEObject_Call) Run(run func(_a0 string)) *MockEResourceInternal_GetEObject_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockEResourceInternal_GetEObject_Call) Return(_a0 EObject) *MockEResourceInternal_GetEObject_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetErrors provides a mock function with given fields:
func (_m *MockEResourceInternal) GetErrors() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceInternal_GetErrors_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetErrors'
type MockEResourceInternal_GetErrors_Call struct {
	*mock.Call
}

// GetErrors is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetErrors() *MockEResourceInternal_GetErrors_Call {
	return &MockEResourceInternal_GetErrors_Call{Call: _e.mock.On("GetErrors")}
}

func (_c *MockEResourceInternal_GetErrors_Call) Run(run func()) *MockEResourceInternal_GetErrors_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetErrors_Call) Return(_a0 EList) *MockEResourceInternal_GetErrors_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetObjectIDManager provides a mock function with given fields:
func (_m *MockEResourceInternal) GetObjectIDManager() EObjectIDManager {
	ret := _m.Called()

	var r0 EObjectIDManager
	if rf, ok := ret.Get(0).(func() EObjectIDManager); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EObjectIDManager)
		}
	}

	return r0
}

// MockEResourceInternal_GetObjectIDManager_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetObjectIDManager'
type MockEResourceInternal_GetObjectIDManager_Call struct {
	*mock.Call
}

// GetObjectIDManager is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetObjectIDManager() *MockEResourceInternal_GetObjectIDManager_Call {
	return &MockEResourceInternal_GetObjectIDManager_Call{Call: _e.mock.On("GetObjectIDManager")}
}

func (_c *MockEResourceInternal_GetObjectIDManager_Call) Run(run func()) *MockEResourceInternal_GetObjectIDManager_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetObjectIDManager_Call) Return(_a0 EObjectIDManager) *MockEResourceInternal_GetObjectIDManager_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetResourceListeners provides a mock function with given fields:
func (_m *MockEResourceInternal) GetResourceListeners() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceInternal_GetResourceListeners_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResourceListeners'
type MockEResourceInternal_GetResourceListeners_Call struct {
	*mock.Call
}

// GetResourceListeners is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetResourceListeners() *MockEResourceInternal_GetResourceListeners_Call {
	return &MockEResourceInternal_GetResourceListeners_Call{Call: _e.mock.On("GetResourceListeners")}
}

func (_c *MockEResourceInternal_GetResourceListeners_Call) Run(run func()) *MockEResourceInternal_GetResourceListeners_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetResourceListeners_Call) Return(_a0 EList) *MockEResourceInternal_GetResourceListeners_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetResourceSet provides a mock function with given fields:
func (_m *MockEResourceInternal) GetResourceSet() EResourceSet {
	ret := _m.Called()

	var r0 EResourceSet
	if rf, ok := ret.Get(0).(func() EResourceSet); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResourceSet)
		}
	}

	return r0
}

// MockEResourceInternal_GetResourceSet_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResourceSet'
type MockEResourceInternal_GetResourceSet_Call struct {
	*mock.Call
}

// GetResourceSet is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetResourceSet() *MockEResourceInternal_GetResourceSet_Call {
	return &MockEResourceInternal_GetResourceSet_Call{Call: _e.mock.On("GetResourceSet")}
}

func (_c *MockEResourceInternal_GetResourceSet_Call) Run(run func()) *MockEResourceInternal_GetResourceSet_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetResourceSet_Call) Return(_a0 EResourceSet) *MockEResourceInternal_GetResourceSet_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetURI provides a mock function with given fields:
func (_m *MockEResourceInternal) GetURI() *URI {
	ret := _m.Called()

	var r0 *URI
	if rf, ok := ret.Get(0).(func() *URI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*URI)
		}
	}

	return r0
}

// MockEResourceInternal_GetURI_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetURI'
type MockEResourceInternal_GetURI_Call struct {
	*mock.Call
}

// GetURI is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetURI() *MockEResourceInternal_GetURI_Call {
	return &MockEResourceInternal_GetURI_Call{Call: _e.mock.On("GetURI")}
}

func (_c *MockEResourceInternal_GetURI_Call) Run(run func()) *MockEResourceInternal_GetURI_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetURI_Call) Return(_a0 *URI) *MockEResourceInternal_GetURI_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetURIFragment provides a mock function with given fields: _a0
func (_m *MockEResourceInternal) GetURIFragment(_a0 EObject) string {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(EObject) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockEResourceInternal_GetURIFragment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetURIFragment'
type MockEResourceInternal_GetURIFragment_Call struct {
	*mock.Call
}

// GetURIFragment is a helper method to define mock.On call
//   - _a0 EObject
func (_e *MockEResourceInternal_Expecter) GetURIFragment(_a0 interface{}) *MockEResourceInternal_GetURIFragment_Call {
	return &MockEResourceInternal_GetURIFragment_Call{Call: _e.mock.On("GetURIFragment", _a0)}
}

func (_c *MockEResourceInternal_GetURIFragment_Call) Run(run func(_a0 EObject)) *MockEResourceInternal_GetURIFragment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EObject))
	})
	return _c
}

func (_c *MockEResourceInternal_GetURIFragment_Call) Return(_a0 string) *MockEResourceInternal_GetURIFragment_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetWarnings provides a mock function with given fields:
func (_m *MockEResourceInternal) GetWarnings() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceInternal_GetWarnings_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetWarnings'
type MockEResourceInternal_GetWarnings_Call struct {
	*mock.Call
}

// GetWarnings is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) GetWarnings() *MockEResourceInternal_GetWarnings_Call {
	return &MockEResourceInternal_GetWarnings_Call{Call: _e.mock.On("GetWarnings")}
}

func (_c *MockEResourceInternal_GetWarnings_Call) Run(run func()) *MockEResourceInternal_GetWarnings_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_GetWarnings_Call) Return(_a0 EList) *MockEResourceInternal_GetWarnings_Call {
	_c.Call.Return(_a0)
	return _c
}

// IsAttachedDetachedRequired provides a mock function with given fields:
func (_m *MockEResourceInternal) IsAttachedDetachedRequired() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockEResourceInternal_IsAttachedDetachedRequired_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsAttachedDetachedRequired'
type MockEResourceInternal_IsAttachedDetachedRequired_Call struct {
	*mock.Call
}

// IsAttachedDetachedRequired is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) IsAttachedDetachedRequired() *MockEResourceInternal_IsAttachedDetachedRequired_Call {
	return &MockEResourceInternal_IsAttachedDetachedRequired_Call{Call: _e.mock.On("IsAttachedDetachedRequired")}
}

func (_c *MockEResourceInternal_IsAttachedDetachedRequired_Call) Run(run func()) *MockEResourceInternal_IsAttachedDetachedRequired_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_IsAttachedDetachedRequired_Call) Return(_a0 bool) *MockEResourceInternal_IsAttachedDetachedRequired_Call {
	_c.Call.Return(_a0)
	return _c
}

// IsLoaded provides a mock function with given fields:
func (_m *MockEResourceInternal) IsLoaded() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockEResourceInternal_IsLoaded_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsLoaded'
type MockEResourceInternal_IsLoaded_Call struct {
	*mock.Call
}

// IsLoaded is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) IsLoaded() *MockEResourceInternal_IsLoaded_Call {
	return &MockEResourceInternal_IsLoaded_Call{Call: _e.mock.On("IsLoaded")}
}

func (_c *MockEResourceInternal_IsLoaded_Call) Run(run func()) *MockEResourceInternal_IsLoaded_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_IsLoaded_Call) Return(_a0 bool) *MockEResourceInternal_IsLoaded_Call {
	_c.Call.Return(_a0)
	return _c
}

// IsLoading provides a mock function with given fields:
func (_m *MockEResourceInternal) IsLoading() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockEResourceInternal_IsLoading_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'IsLoading'
type MockEResourceInternal_IsLoading_Call struct {
	*mock.Call
}

// IsLoading is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) IsLoading() *MockEResourceInternal_IsLoading_Call {
	return &MockEResourceInternal_IsLoading_Call{Call: _e.mock.On("IsLoading")}
}

func (_c *MockEResourceInternal_IsLoading_Call) Run(run func()) *MockEResourceInternal_IsLoading_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_IsLoading_Call) Return(_a0 bool) *MockEResourceInternal_IsLoading_Call {
	_c.Call.Return(_a0)
	return _c
}

// Load provides a mock function with given fields:
func (_m *MockEResourceInternal) Load() {
	_m.Called()
}

// MockEResourceInternal_Load_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Load'
type MockEResourceInternal_Load_Call struct {
	*mock.Call
}

// Load is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) Load() *MockEResourceInternal_Load_Call {
	return &MockEResourceInternal_Load_Call{Call: _e.mock.On("Load")}
}

func (_c *MockEResourceInternal_Load_Call) Run(run func()) *MockEResourceInternal_Load_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_Load_Call) Return() *MockEResourceInternal_Load_Call {
	_c.Call.Return()
	return _c
}

// LoadWithOptions provides a mock function with given fields: options
func (_m *MockEResourceInternal) LoadWithOptions(options map[string]interface{}) {
	_m.Called(options)
}

// MockEResourceInternal_LoadWithOptions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadWithOptions'
type MockEResourceInternal_LoadWithOptions_Call struct {
	*mock.Call
}

// LoadWithOptions is a helper method to define mock.On call
//   - options map[string]interface{}
func (_e *MockEResourceInternal_Expecter) LoadWithOptions(options interface{}) *MockEResourceInternal_LoadWithOptions_Call {
	return &MockEResourceInternal_LoadWithOptions_Call{Call: _e.mock.On("LoadWithOptions", options)}
}

func (_c *MockEResourceInternal_LoadWithOptions_Call) Run(run func(options map[string]interface{})) *MockEResourceInternal_LoadWithOptions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]interface{}))
	})
	return _c
}

func (_c *MockEResourceInternal_LoadWithOptions_Call) Return() *MockEResourceInternal_LoadWithOptions_Call {
	_c.Call.Return()
	return _c
}

// LoadWithReader provides a mock function with given fields: r, options
func (_m *MockEResourceInternal) LoadWithReader(r io.Reader, options map[string]interface{}) {
	_m.Called(r, options)
}

// MockEResourceInternal_LoadWithReader_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'LoadWithReader'
type MockEResourceInternal_LoadWithReader_Call struct {
	*mock.Call
}

// LoadWithReader is a helper method to define mock.On call
//   - r io.Reader
//   - options map[string]interface{}
func (_e *MockEResourceInternal_Expecter) LoadWithReader(r interface{}, options interface{}) *MockEResourceInternal_LoadWithReader_Call {
	return &MockEResourceInternal_LoadWithReader_Call{Call: _e.mock.On("LoadWithReader", r, options)}
}

func (_c *MockEResourceInternal_LoadWithReader_Call) Run(run func(r io.Reader, options map[string]interface{})) *MockEResourceInternal_LoadWithReader_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(io.Reader), args[1].(map[string]interface{}))
	})
	return _c
}

func (_c *MockEResourceInternal_LoadWithReader_Call) Return() *MockEResourceInternal_LoadWithReader_Call {
	_c.Call.Return()
	return _c
}

// Save provides a mock function with given fields:
func (_m *MockEResourceInternal) Save() {
	_m.Called()
}

// MockEResourceInternal_Save_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Save'
type MockEResourceInternal_Save_Call struct {
	*mock.Call
}

// Save is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) Save() *MockEResourceInternal_Save_Call {
	return &MockEResourceInternal_Save_Call{Call: _e.mock.On("Save")}
}

func (_c *MockEResourceInternal_Save_Call) Run(run func()) *MockEResourceInternal_Save_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_Save_Call) Return() *MockEResourceInternal_Save_Call {
	_c.Call.Return()
	return _c
}

// SaveWithOptions provides a mock function with given fields: options
func (_m *MockEResourceInternal) SaveWithOptions(options map[string]interface{}) {
	_m.Called(options)
}

// MockEResourceInternal_SaveWithOptions_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveWithOptions'
type MockEResourceInternal_SaveWithOptions_Call struct {
	*mock.Call
}

// SaveWithOptions is a helper method to define mock.On call
//   - options map[string]interface{}
func (_e *MockEResourceInternal_Expecter) SaveWithOptions(options interface{}) *MockEResourceInternal_SaveWithOptions_Call {
	return &MockEResourceInternal_SaveWithOptions_Call{Call: _e.mock.On("SaveWithOptions", options)}
}

func (_c *MockEResourceInternal_SaveWithOptions_Call) Run(run func(options map[string]interface{})) *MockEResourceInternal_SaveWithOptions_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[string]interface{}))
	})
	return _c
}

func (_c *MockEResourceInternal_SaveWithOptions_Call) Return() *MockEResourceInternal_SaveWithOptions_Call {
	_c.Call.Return()
	return _c
}

// SaveWithWriter provides a mock function with given fields: w, options
func (_m *MockEResourceInternal) SaveWithWriter(w io.Writer, options map[string]interface{}) {
	_m.Called(w, options)
}

// MockEResourceInternal_SaveWithWriter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SaveWithWriter'
type MockEResourceInternal_SaveWithWriter_Call struct {
	*mock.Call
}

// SaveWithWriter is a helper method to define mock.On call
//   - w io.Writer
//   - options map[string]interface{}
func (_e *MockEResourceInternal_Expecter) SaveWithWriter(w interface{}, options interface{}) *MockEResourceInternal_SaveWithWriter_Call {
	return &MockEResourceInternal_SaveWithWriter_Call{Call: _e.mock.On("SaveWithWriter", w, options)}
}

func (_c *MockEResourceInternal_SaveWithWriter_Call) Run(run func(w io.Writer, options map[string]interface{})) *MockEResourceInternal_SaveWithWriter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(io.Writer), args[1].(map[string]interface{}))
	})
	return _c
}

func (_c *MockEResourceInternal_SaveWithWriter_Call) Return() *MockEResourceInternal_SaveWithWriter_Call {
	_c.Call.Return()
	return _c
}

// SetObjectIDManager provides a mock function with given fields: _a0
func (_m *MockEResourceInternal) SetObjectIDManager(_a0 EObjectIDManager) {
	_m.Called(_a0)
}

// MockEResourceInternal_SetObjectIDManager_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetObjectIDManager'
type MockEResourceInternal_SetObjectIDManager_Call struct {
	*mock.Call
}

// SetObjectIDManager is a helper method to define mock.On call
//   - _a0 EObjectIDManager
func (_e *MockEResourceInternal_Expecter) SetObjectIDManager(_a0 interface{}) *MockEResourceInternal_SetObjectIDManager_Call {
	return &MockEResourceInternal_SetObjectIDManager_Call{Call: _e.mock.On("SetObjectIDManager", _a0)}
}

func (_c *MockEResourceInternal_SetObjectIDManager_Call) Run(run func(_a0 EObjectIDManager)) *MockEResourceInternal_SetObjectIDManager_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EObjectIDManager))
	})
	return _c
}

func (_c *MockEResourceInternal_SetObjectIDManager_Call) Return() *MockEResourceInternal_SetObjectIDManager_Call {
	_c.Call.Return()
	return _c
}

// SetURI provides a mock function with given fields: _a0
func (_m *MockEResourceInternal) SetURI(_a0 *URI) {
	_m.Called(_a0)
}

// MockEResourceInternal_SetURI_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetURI'
type MockEResourceInternal_SetURI_Call struct {
	*mock.Call
}

// SetURI is a helper method to define mock.On call
//   - _a0 *URI
func (_e *MockEResourceInternal_Expecter) SetURI(_a0 interface{}) *MockEResourceInternal_SetURI_Call {
	return &MockEResourceInternal_SetURI_Call{Call: _e.mock.On("SetURI", _a0)}
}

func (_c *MockEResourceInternal_SetURI_Call) Run(run func(_a0 *URI)) *MockEResourceInternal_SetURI_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*URI))
	})
	return _c
}

func (_c *MockEResourceInternal_SetURI_Call) Return() *MockEResourceInternal_SetURI_Call {
	_c.Call.Return()
	return _c
}

// Unload provides a mock function with given fields:
func (_m *MockEResourceInternal) Unload() {
	_m.Called()
}

// MockEResourceInternal_Unload_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Unload'
type MockEResourceInternal_Unload_Call struct {
	*mock.Call
}

// Unload is a helper method to define mock.On call
func (_e *MockEResourceInternal_Expecter) Unload() *MockEResourceInternal_Unload_Call {
	return &MockEResourceInternal_Unload_Call{Call: _e.mock.On("Unload")}
}

func (_c *MockEResourceInternal_Unload_Call) Run(run func()) *MockEResourceInternal_Unload_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceInternal_Unload_Call) Return() *MockEResourceInternal_Unload_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewMockEResourceInternal interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEResourceInternal creates a new instance of MockEResourceInternal. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEResourceInternal(t mockConstructorTestingTNewMockEResourceInternal) *MockEResourceInternal {
	mock := &MockEResourceInternal{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
