// Code generated by mockery v2.16.0. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import mock "github.com/stretchr/testify/mock"

// MockEResourceSet is an autogenerated mock type for the EResourceSet type
type MockEResourceSet struct {
	mock.Mock
}

type MockEResourceSet_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEResourceSet) EXPECT() *MockEResourceSet_Expecter {
	return &MockEResourceSet_Expecter{mock: &_m.Mock}
}

// CreateResource provides a mock function with given fields: uri
func (_m *MockEResourceSet) CreateResource(uri *URI) EResource {
	ret := _m.Called(uri)

	var r0 EResource
	if rf, ok := ret.Get(0).(func(*URI) EResource); ok {
		r0 = rf(uri)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResource)
		}
	}

	return r0
}

// MockEResourceSet_CreateResource_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateResource'
type MockEResourceSet_CreateResource_Call struct {
	*mock.Call
}

// CreateResource is a helper method to define mock.On call
//   - uri *URI
func (_e *MockEResourceSet_Expecter) CreateResource(uri interface{}) *MockEResourceSet_CreateResource_Call {
	return &MockEResourceSet_CreateResource_Call{Call: _e.mock.On("CreateResource", uri)}
}

func (_c *MockEResourceSet_CreateResource_Call) Run(run func(uri *URI)) *MockEResourceSet_CreateResource_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*URI))
	})
	return _c
}

func (_c *MockEResourceSet_CreateResource_Call) Return(_a0 EResource) *MockEResourceSet_CreateResource_Call {
	_c.Call.Return(_a0)
	return _c
}

// EAdapters provides a mock function with given fields:
func (_m *MockEResourceSet) EAdapters() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceSet_EAdapters_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EAdapters'
type MockEResourceSet_EAdapters_Call struct {
	*mock.Call
}

// EAdapters is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) EAdapters() *MockEResourceSet_EAdapters_Call {
	return &MockEResourceSet_EAdapters_Call{Call: _e.mock.On("EAdapters")}
}

func (_c *MockEResourceSet_EAdapters_Call) Run(run func()) *MockEResourceSet_EAdapters_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_EAdapters_Call) Return(_a0 EList) *MockEResourceSet_EAdapters_Call {
	_c.Call.Return(_a0)
	return _c
}

// EDeliver provides a mock function with given fields:
func (_m *MockEResourceSet) EDeliver() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockEResourceSet_EDeliver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'EDeliver'
type MockEResourceSet_EDeliver_Call struct {
	*mock.Call
}

// EDeliver is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) EDeliver() *MockEResourceSet_EDeliver_Call {
	return &MockEResourceSet_EDeliver_Call{Call: _e.mock.On("EDeliver")}
}

func (_c *MockEResourceSet_EDeliver_Call) Run(run func()) *MockEResourceSet_EDeliver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_EDeliver_Call) Return(_a0 bool) *MockEResourceSet_EDeliver_Call {
	_c.Call.Return(_a0)
	return _c
}

// ENotify provides a mock function with given fields: _a0
func (_m *MockEResourceSet) ENotify(_a0 ENotification) {
	_m.Called(_a0)
}

// MockEResourceSet_ENotify_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ENotify'
type MockEResourceSet_ENotify_Call struct {
	*mock.Call
}

// ENotify is a helper method to define mock.On call
//   - _a0 ENotification
func (_e *MockEResourceSet_Expecter) ENotify(_a0 interface{}) *MockEResourceSet_ENotify_Call {
	return &MockEResourceSet_ENotify_Call{Call: _e.mock.On("ENotify", _a0)}
}

func (_c *MockEResourceSet_ENotify_Call) Run(run func(_a0 ENotification)) *MockEResourceSet_ENotify_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ENotification))
	})
	return _c
}

func (_c *MockEResourceSet_ENotify_Call) Return() *MockEResourceSet_ENotify_Call {
	_c.Call.Return()
	return _c
}

// ESetDeliver provides a mock function with given fields: _a0
func (_m *MockEResourceSet) ESetDeliver(_a0 bool) {
	_m.Called(_a0)
}

// MockEResourceSet_ESetDeliver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ESetDeliver'
type MockEResourceSet_ESetDeliver_Call struct {
	*mock.Call
}

// ESetDeliver is a helper method to define mock.On call
//   - _a0 bool
func (_e *MockEResourceSet_Expecter) ESetDeliver(_a0 interface{}) *MockEResourceSet_ESetDeliver_Call {
	return &MockEResourceSet_ESetDeliver_Call{Call: _e.mock.On("ESetDeliver", _a0)}
}

func (_c *MockEResourceSet_ESetDeliver_Call) Run(run func(_a0 bool)) *MockEResourceSet_ESetDeliver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(bool))
	})
	return _c
}

func (_c *MockEResourceSet_ESetDeliver_Call) Return() *MockEResourceSet_ESetDeliver_Call {
	_c.Call.Return()
	return _c
}

// GetEObject provides a mock function with given fields: uri, loadOnDemand
func (_m *MockEResourceSet) GetEObject(uri *URI, loadOnDemand bool) EObject {
	ret := _m.Called(uri, loadOnDemand)

	var r0 EObject
	if rf, ok := ret.Get(0).(func(*URI, bool) EObject); ok {
		r0 = rf(uri, loadOnDemand)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EObject)
		}
	}

	return r0
}

// MockEResourceSet_GetEObject_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetEObject'
type MockEResourceSet_GetEObject_Call struct {
	*mock.Call
}

// GetEObject is a helper method to define mock.On call
//   - uri *URI
//   - loadOnDemand bool
func (_e *MockEResourceSet_Expecter) GetEObject(uri interface{}, loadOnDemand interface{}) *MockEResourceSet_GetEObject_Call {
	return &MockEResourceSet_GetEObject_Call{Call: _e.mock.On("GetEObject", uri, loadOnDemand)}
}

func (_c *MockEResourceSet_GetEObject_Call) Run(run func(uri *URI, loadOnDemand bool)) *MockEResourceSet_GetEObject_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*URI), args[1].(bool))
	})
	return _c
}

func (_c *MockEResourceSet_GetEObject_Call) Return(_a0 EObject) *MockEResourceSet_GetEObject_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetPackageRegistry provides a mock function with given fields:
func (_m *MockEResourceSet) GetPackageRegistry() EPackageRegistry {
	ret := _m.Called()

	var r0 EPackageRegistry
	if rf, ok := ret.Get(0).(func() EPackageRegistry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EPackageRegistry)
		}
	}

	return r0
}

// MockEResourceSet_GetPackageRegistry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPackageRegistry'
type MockEResourceSet_GetPackageRegistry_Call struct {
	*mock.Call
}

// GetPackageRegistry is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) GetPackageRegistry() *MockEResourceSet_GetPackageRegistry_Call {
	return &MockEResourceSet_GetPackageRegistry_Call{Call: _e.mock.On("GetPackageRegistry")}
}

func (_c *MockEResourceSet_GetPackageRegistry_Call) Run(run func()) *MockEResourceSet_GetPackageRegistry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_GetPackageRegistry_Call) Return(_a0 EPackageRegistry) *MockEResourceSet_GetPackageRegistry_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetResource provides a mock function with given fields: uri, loadOnDemand
func (_m *MockEResourceSet) GetResource(uri *URI, loadOnDemand bool) EResource {
	ret := _m.Called(uri, loadOnDemand)

	var r0 EResource
	if rf, ok := ret.Get(0).(func(*URI, bool) EResource); ok {
		r0 = rf(uri, loadOnDemand)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResource)
		}
	}

	return r0
}

// MockEResourceSet_GetResource_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResource'
type MockEResourceSet_GetResource_Call struct {
	*mock.Call
}

// GetResource is a helper method to define mock.On call
//   - uri *URI
//   - loadOnDemand bool
func (_e *MockEResourceSet_Expecter) GetResource(uri interface{}, loadOnDemand interface{}) *MockEResourceSet_GetResource_Call {
	return &MockEResourceSet_GetResource_Call{Call: _e.mock.On("GetResource", uri, loadOnDemand)}
}

func (_c *MockEResourceSet_GetResource_Call) Run(run func(uri *URI, loadOnDemand bool)) *MockEResourceSet_GetResource_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*URI), args[1].(bool))
	})
	return _c
}

func (_c *MockEResourceSet_GetResource_Call) Return(_a0 EResource) *MockEResourceSet_GetResource_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetResourceCodecRegistry provides a mock function with given fields:
func (_m *MockEResourceSet) GetResourceCodecRegistry() EResourceCodecRegistry {
	ret := _m.Called()

	var r0 EResourceCodecRegistry
	if rf, ok := ret.Get(0).(func() EResourceCodecRegistry); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EResourceCodecRegistry)
		}
	}

	return r0
}

// MockEResourceSet_GetResourceCodecRegistry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResourceCodecRegistry'
type MockEResourceSet_GetResourceCodecRegistry_Call struct {
	*mock.Call
}

// GetResourceCodecRegistry is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) GetResourceCodecRegistry() *MockEResourceSet_GetResourceCodecRegistry_Call {
	return &MockEResourceSet_GetResourceCodecRegistry_Call{Call: _e.mock.On("GetResourceCodecRegistry")}
}

func (_c *MockEResourceSet_GetResourceCodecRegistry_Call) Run(run func()) *MockEResourceSet_GetResourceCodecRegistry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_GetResourceCodecRegistry_Call) Return(_a0 EResourceCodecRegistry) *MockEResourceSet_GetResourceCodecRegistry_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetResources provides a mock function with given fields:
func (_m *MockEResourceSet) GetResources() EList {
	ret := _m.Called()

	var r0 EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EList)
		}
	}

	return r0
}

// MockEResourceSet_GetResources_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetResources'
type MockEResourceSet_GetResources_Call struct {
	*mock.Call
}

// GetResources is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) GetResources() *MockEResourceSet_GetResources_Call {
	return &MockEResourceSet_GetResources_Call{Call: _e.mock.On("GetResources")}
}

func (_c *MockEResourceSet_GetResources_Call) Run(run func()) *MockEResourceSet_GetResources_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_GetResources_Call) Return(_a0 EList) *MockEResourceSet_GetResources_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetURIConverter provides a mock function with given fields:
func (_m *MockEResourceSet) GetURIConverter() EURIConverter {
	ret := _m.Called()

	var r0 EURIConverter
	if rf, ok := ret.Get(0).(func() EURIConverter); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EURIConverter)
		}
	}

	return r0
}

// MockEResourceSet_GetURIConverter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetURIConverter'
type MockEResourceSet_GetURIConverter_Call struct {
	*mock.Call
}

// GetURIConverter is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) GetURIConverter() *MockEResourceSet_GetURIConverter_Call {
	return &MockEResourceSet_GetURIConverter_Call{Call: _e.mock.On("GetURIConverter")}
}

func (_c *MockEResourceSet_GetURIConverter_Call) Run(run func()) *MockEResourceSet_GetURIConverter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_GetURIConverter_Call) Return(_a0 EURIConverter) *MockEResourceSet_GetURIConverter_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetURIResourceMap provides a mock function with given fields:
func (_m *MockEResourceSet) GetURIResourceMap() map[*URI]EResource {
	ret := _m.Called()

	var r0 map[*URI]EResource
	if rf, ok := ret.Get(0).(func() map[*URI]EResource); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[*URI]EResource)
		}
	}

	return r0
}

// MockEResourceSet_GetURIResourceMap_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetURIResourceMap'
type MockEResourceSet_GetURIResourceMap_Call struct {
	*mock.Call
}

// GetURIResourceMap is a helper method to define mock.On call
func (_e *MockEResourceSet_Expecter) GetURIResourceMap() *MockEResourceSet_GetURIResourceMap_Call {
	return &MockEResourceSet_GetURIResourceMap_Call{Call: _e.mock.On("GetURIResourceMap")}
}

func (_c *MockEResourceSet_GetURIResourceMap_Call) Run(run func()) *MockEResourceSet_GetURIResourceMap_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockEResourceSet_GetURIResourceMap_Call) Return(_a0 map[*URI]EResource) *MockEResourceSet_GetURIResourceMap_Call {
	_c.Call.Return(_a0)
	return _c
}

// SetPackageRegistry provides a mock function with given fields: packageregistry
func (_m *MockEResourceSet) SetPackageRegistry(packageregistry EPackageRegistry) {
	_m.Called(packageregistry)
}

// MockEResourceSet_SetPackageRegistry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetPackageRegistry'
type MockEResourceSet_SetPackageRegistry_Call struct {
	*mock.Call
}

// SetPackageRegistry is a helper method to define mock.On call
//   - packageregistry EPackageRegistry
func (_e *MockEResourceSet_Expecter) SetPackageRegistry(packageregistry interface{}) *MockEResourceSet_SetPackageRegistry_Call {
	return &MockEResourceSet_SetPackageRegistry_Call{Call: _e.mock.On("SetPackageRegistry", packageregistry)}
}

func (_c *MockEResourceSet_SetPackageRegistry_Call) Run(run func(packageregistry EPackageRegistry)) *MockEResourceSet_SetPackageRegistry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EPackageRegistry))
	})
	return _c
}

func (_c *MockEResourceSet_SetPackageRegistry_Call) Return() *MockEResourceSet_SetPackageRegistry_Call {
	_c.Call.Return()
	return _c
}

// SetResourceCodecRegistry provides a mock function with given fields: resourceCodecRegistry
func (_m *MockEResourceSet) SetResourceCodecRegistry(resourceCodecRegistry EResourceCodecRegistry) {
	_m.Called(resourceCodecRegistry)
}

// MockEResourceSet_SetResourceCodecRegistry_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetResourceCodecRegistry'
type MockEResourceSet_SetResourceCodecRegistry_Call struct {
	*mock.Call
}

// SetResourceCodecRegistry is a helper method to define mock.On call
//   - resourceCodecRegistry EResourceCodecRegistry
func (_e *MockEResourceSet_Expecter) SetResourceCodecRegistry(resourceCodecRegistry interface{}) *MockEResourceSet_SetResourceCodecRegistry_Call {
	return &MockEResourceSet_SetResourceCodecRegistry_Call{Call: _e.mock.On("SetResourceCodecRegistry", resourceCodecRegistry)}
}

func (_c *MockEResourceSet_SetResourceCodecRegistry_Call) Run(run func(resourceCodecRegistry EResourceCodecRegistry)) *MockEResourceSet_SetResourceCodecRegistry_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EResourceCodecRegistry))
	})
	return _c
}

func (_c *MockEResourceSet_SetResourceCodecRegistry_Call) Return() *MockEResourceSet_SetResourceCodecRegistry_Call {
	_c.Call.Return()
	return _c
}

// SetURIConverter provides a mock function with given fields: uriConverter
func (_m *MockEResourceSet) SetURIConverter(uriConverter EURIConverter) {
	_m.Called(uriConverter)
}

// MockEResourceSet_SetURIConverter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetURIConverter'
type MockEResourceSet_SetURIConverter_Call struct {
	*mock.Call
}

// SetURIConverter is a helper method to define mock.On call
//   - uriConverter EURIConverter
func (_e *MockEResourceSet_Expecter) SetURIConverter(uriConverter interface{}) *MockEResourceSet_SetURIConverter_Call {
	return &MockEResourceSet_SetURIConverter_Call{Call: _e.mock.On("SetURIConverter", uriConverter)}
}

func (_c *MockEResourceSet_SetURIConverter_Call) Run(run func(uriConverter EURIConverter)) *MockEResourceSet_SetURIConverter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(EURIConverter))
	})
	return _c
}

func (_c *MockEResourceSet_SetURIConverter_Call) Return() *MockEResourceSet_SetURIConverter_Call {
	_c.Call.Return()
	return _c
}

// SetURIResourceMap provides a mock function with given fields: uriMap
func (_m *MockEResourceSet) SetURIResourceMap(uriMap map[*URI]EResource) {
	_m.Called(uriMap)
}

// MockEResourceSet_SetURIResourceMap_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SetURIResourceMap'
type MockEResourceSet_SetURIResourceMap_Call struct {
	*mock.Call
}

// SetURIResourceMap is a helper method to define mock.On call
//   - uriMap map[*URI]EResource
func (_e *MockEResourceSet_Expecter) SetURIResourceMap(uriMap interface{}) *MockEResourceSet_SetURIResourceMap_Call {
	return &MockEResourceSet_SetURIResourceMap_Call{Call: _e.mock.On("SetURIResourceMap", uriMap)}
}

func (_c *MockEResourceSet_SetURIResourceMap_Call) Run(run func(uriMap map[*URI]EResource)) *MockEResourceSet_SetURIResourceMap_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(map[*URI]EResource))
	})
	return _c
}

func (_c *MockEResourceSet_SetURIResourceMap_Call) Return() *MockEResourceSet_SetURIResourceMap_Call {
	_c.Call.Return()
	return _c
}

type mockConstructorTestingTNewMockEResourceSet interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEResourceSet creates a new instance of MockEResourceSet. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEResourceSet(t mockConstructorTestingTNewMockEResourceSet) *MockEResourceSet {
	mock := &MockEResourceSet{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
