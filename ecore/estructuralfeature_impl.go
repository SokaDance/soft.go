// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import "reflect"

// EStructuralFeatureImpl is the implementation of the model object 'EStructuralFeature'
type EStructuralFeatureImpl struct {
	ETypedElementExt
	defaultValueLiteral string
	featureID           int
	isChangeable        bool
	isDerived           bool
	isTransient         bool
	isUnsettable        bool
	isVolatile          bool
}

// newEStructuralFeatureImpl is the constructor of a EStructuralFeatureImpl
func newEStructuralFeatureImpl() *EStructuralFeatureImpl {
	eStructuralFeature := new(EStructuralFeatureImpl)
	eStructuralFeature.SetInterfaces(eStructuralFeature)
	eStructuralFeature.Initialize()
	return eStructuralFeature
}

func (eStructuralFeature *EStructuralFeatureImpl) Initialize() {
	eStructuralFeature.ETypedElementExt.Initialize()
	eStructuralFeature.defaultValueLiteral = ""
	eStructuralFeature.featureID = -1
	eStructuralFeature.isChangeable = true
	eStructuralFeature.isDerived = false
	eStructuralFeature.isTransient = false
	eStructuralFeature.isUnsettable = false
	eStructuralFeature.isVolatile = false

}

func (eStructuralFeature *EStructuralFeatureImpl) asEStructuralFeature() EStructuralFeature {
	return eStructuralFeature.GetInterfaces().(EStructuralFeature)
}

func (eStructuralFeature *EStructuralFeatureImpl) EStaticClass() EClass {
	return GetPackage().GetEStructuralFeature()
}

func (eStructuralFeature *EStructuralFeatureImpl) EStaticFeatureCount() int {
	return ESTRUCTURAL_FEATURE_FEATURE_COUNT
}

// GetContainerClass default implementation
func (eStructuralFeature *EStructuralFeatureImpl) GetContainerClass() reflect.Type {
	panic("GetContainerClass not implemented")
}

// GetDefaultValue get the value of defaultValue
func (eStructuralFeature *EStructuralFeatureImpl) GetDefaultValue() any {
	panic("GetDefaultValue not implemented")
}

// SetDefaultValue set the value of defaultValue
func (eStructuralFeature *EStructuralFeatureImpl) SetDefaultValue(newDefaultValue any) {
	panic("SetDefaultValue not implemented")
}

// GetDefaultValueLiteral get the value of defaultValueLiteral
func (eStructuralFeature *EStructuralFeatureImpl) GetDefaultValueLiteral() string {
	return eStructuralFeature.defaultValueLiteral
}

// SetDefaultValueLiteral set the value of defaultValueLiteral
func (eStructuralFeature *EStructuralFeatureImpl) SetDefaultValueLiteral(newDefaultValueLiteral string) {
	oldDefaultValueLiteral := eStructuralFeature.defaultValueLiteral
	eStructuralFeature.defaultValueLiteral = newDefaultValueLiteral
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL, oldDefaultValueLiteral, newDefaultValueLiteral, NO_INDEX))
	}
}

// GetEContainingClass get the value of eContainingClass
func (eStructuralFeature *EStructuralFeatureImpl) GetEContainingClass() EClass {
	if eStructuralFeature.EContainerFeatureID() == ESTRUCTURAL_FEATURE__ECONTAINING_CLASS {
		return eStructuralFeature.EContainer().(EClass)
	}
	return nil
}

// GetFeatureID get the value of featureID
func (eStructuralFeature *EStructuralFeatureImpl) GetFeatureID() int {
	return eStructuralFeature.featureID
}

// SetFeatureID set the value of featureID
func (eStructuralFeature *EStructuralFeatureImpl) SetFeatureID(newFeatureID int) {
	oldFeatureID := eStructuralFeature.featureID
	eStructuralFeature.featureID = newFeatureID
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__FEATURE_ID, oldFeatureID, newFeatureID, NO_INDEX))
	}
}

// IsChangeable get the value of isChangeable
func (eStructuralFeature *EStructuralFeatureImpl) IsChangeable() bool {
	return eStructuralFeature.isChangeable
}

// SetChangeable set the value of isChangeable
func (eStructuralFeature *EStructuralFeatureImpl) SetChangeable(newIsChangeable bool) {
	oldIsChangeable := eStructuralFeature.isChangeable
	eStructuralFeature.isChangeable = newIsChangeable
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__CHANGEABLE, oldIsChangeable, newIsChangeable, NO_INDEX))
	}
}

// IsDerived get the value of isDerived
func (eStructuralFeature *EStructuralFeatureImpl) IsDerived() bool {
	return eStructuralFeature.isDerived
}

// SetDerived set the value of isDerived
func (eStructuralFeature *EStructuralFeatureImpl) SetDerived(newIsDerived bool) {
	oldIsDerived := eStructuralFeature.isDerived
	eStructuralFeature.isDerived = newIsDerived
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__DERIVED, oldIsDerived, newIsDerived, NO_INDEX))
	}
}

// IsTransient get the value of isTransient
func (eStructuralFeature *EStructuralFeatureImpl) IsTransient() bool {
	return eStructuralFeature.isTransient
}

// SetTransient set the value of isTransient
func (eStructuralFeature *EStructuralFeatureImpl) SetTransient(newIsTransient bool) {
	oldIsTransient := eStructuralFeature.isTransient
	eStructuralFeature.isTransient = newIsTransient
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__TRANSIENT, oldIsTransient, newIsTransient, NO_INDEX))
	}
}

// IsUnsettable get the value of isUnsettable
func (eStructuralFeature *EStructuralFeatureImpl) IsUnsettable() bool {
	return eStructuralFeature.isUnsettable
}

// SetUnsettable set the value of isUnsettable
func (eStructuralFeature *EStructuralFeatureImpl) SetUnsettable(newIsUnsettable bool) {
	oldIsUnsettable := eStructuralFeature.isUnsettable
	eStructuralFeature.isUnsettable = newIsUnsettable
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__UNSETTABLE, oldIsUnsettable, newIsUnsettable, NO_INDEX))
	}
}

// IsVolatile get the value of isVolatile
func (eStructuralFeature *EStructuralFeatureImpl) IsVolatile() bool {
	return eStructuralFeature.isVolatile
}

// SetVolatile set the value of isVolatile
func (eStructuralFeature *EStructuralFeatureImpl) SetVolatile(newIsVolatile bool) {
	oldIsVolatile := eStructuralFeature.isVolatile
	eStructuralFeature.isVolatile = newIsVolatile
	if eStructuralFeature.ENotificationRequired() {
		eStructuralFeature.ENotify(NewNotificationByFeatureID(eStructuralFeature.AsEObject(), SET, ESTRUCTURAL_FEATURE__VOLATILE, oldIsVolatile, newIsVolatile, NO_INDEX))
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) EGetFromID(featureID int, resolve bool) any {
	switch featureID {
	case ESTRUCTURAL_FEATURE__CHANGEABLE:
		return eStructuralFeature.asEStructuralFeature().IsChangeable()
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE:
		return eStructuralFeature.asEStructuralFeature().GetDefaultValue()
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL:
		return eStructuralFeature.asEStructuralFeature().GetDefaultValueLiteral()
	case ESTRUCTURAL_FEATURE__DERIVED:
		return eStructuralFeature.asEStructuralFeature().IsDerived()
	case ESTRUCTURAL_FEATURE__ECONTAINING_CLASS:
		return eStructuralFeature.asEStructuralFeature().GetEContainingClass()
	case ESTRUCTURAL_FEATURE__FEATURE_ID:
		return eStructuralFeature.asEStructuralFeature().GetFeatureID()
	case ESTRUCTURAL_FEATURE__TRANSIENT:
		return eStructuralFeature.asEStructuralFeature().IsTransient()
	case ESTRUCTURAL_FEATURE__UNSETTABLE:
		return eStructuralFeature.asEStructuralFeature().IsUnsettable()
	case ESTRUCTURAL_FEATURE__VOLATILE:
		return eStructuralFeature.asEStructuralFeature().IsVolatile()
	default:
		return eStructuralFeature.ETypedElementExt.EGetFromID(featureID, resolve)
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) ESetFromID(featureID int, newValue any) {
	switch featureID {
	case ESTRUCTURAL_FEATURE__CHANGEABLE:
		eStructuralFeature.asEStructuralFeature().SetChangeable(newValue.(bool))
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE:
		eStructuralFeature.asEStructuralFeature().SetDefaultValue(newValue)
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL:
		eStructuralFeature.asEStructuralFeature().SetDefaultValueLiteral(newValue.(string))
	case ESTRUCTURAL_FEATURE__DERIVED:
		eStructuralFeature.asEStructuralFeature().SetDerived(newValue.(bool))
	case ESTRUCTURAL_FEATURE__FEATURE_ID:
		eStructuralFeature.asEStructuralFeature().SetFeatureID(newValue.(int))
	case ESTRUCTURAL_FEATURE__TRANSIENT:
		eStructuralFeature.asEStructuralFeature().SetTransient(newValue.(bool))
	case ESTRUCTURAL_FEATURE__UNSETTABLE:
		eStructuralFeature.asEStructuralFeature().SetUnsettable(newValue.(bool))
	case ESTRUCTURAL_FEATURE__VOLATILE:
		eStructuralFeature.asEStructuralFeature().SetVolatile(newValue.(bool))
	default:
		eStructuralFeature.ETypedElementExt.ESetFromID(featureID, newValue)
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) EUnsetFromID(featureID int) {
	switch featureID {
	case ESTRUCTURAL_FEATURE__CHANGEABLE:
		eStructuralFeature.asEStructuralFeature().SetChangeable(true)
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE:
		eStructuralFeature.asEStructuralFeature().SetDefaultValue(nil)
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL:
		eStructuralFeature.asEStructuralFeature().SetDefaultValueLiteral("")
	case ESTRUCTURAL_FEATURE__DERIVED:
		eStructuralFeature.asEStructuralFeature().SetDerived(false)
	case ESTRUCTURAL_FEATURE__FEATURE_ID:
		eStructuralFeature.asEStructuralFeature().SetFeatureID(-1)
	case ESTRUCTURAL_FEATURE__TRANSIENT:
		eStructuralFeature.asEStructuralFeature().SetTransient(false)
	case ESTRUCTURAL_FEATURE__UNSETTABLE:
		eStructuralFeature.asEStructuralFeature().SetUnsettable(false)
	case ESTRUCTURAL_FEATURE__VOLATILE:
		eStructuralFeature.asEStructuralFeature().SetVolatile(false)
	default:
		eStructuralFeature.ETypedElementExt.EUnsetFromID(featureID)
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) EIsSetFromID(featureID int) bool {
	switch featureID {
	case ESTRUCTURAL_FEATURE__CHANGEABLE:
		return eStructuralFeature.isChangeable != true
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE:
		return eStructuralFeature.asEStructuralFeature().GetDefaultValue() != nil
	case ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL:
		return eStructuralFeature.defaultValueLiteral != ""
	case ESTRUCTURAL_FEATURE__DERIVED:
		return eStructuralFeature.isDerived != false
	case ESTRUCTURAL_FEATURE__ECONTAINING_CLASS:
		return eStructuralFeature.asEStructuralFeature().GetEContainingClass() != nil
	case ESTRUCTURAL_FEATURE__FEATURE_ID:
		return eStructuralFeature.featureID != -1
	case ESTRUCTURAL_FEATURE__TRANSIENT:
		return eStructuralFeature.isTransient != false
	case ESTRUCTURAL_FEATURE__UNSETTABLE:
		return eStructuralFeature.isUnsettable != false
	case ESTRUCTURAL_FEATURE__VOLATILE:
		return eStructuralFeature.isVolatile != false
	default:
		return eStructuralFeature.ETypedElementExt.EIsSetFromID(featureID)
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) EInvokeFromID(operationID int, arguments EList) any {
	switch operationID {
	case ESTRUCTURAL_FEATURE__GET_CONTAINER_CLASS:
		return eStructuralFeature.asEStructuralFeature().GetContainerClass()
	default:
		return eStructuralFeature.ETypedElementExt.EInvokeFromID(operationID, arguments)
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) EBasicInverseAdd(otherEnd EObject, featureID int, notifications ENotificationChain) ENotificationChain {
	switch featureID {
	case ESTRUCTURAL_FEATURE__ECONTAINING_CLASS:
		msgs := notifications
		if eStructuralFeature.EInternalContainer() != nil {
			msgs = eStructuralFeature.EBasicRemoveFromContainer(msgs)
		}
		return eStructuralFeature.EBasicSetContainer(otherEnd, ESTRUCTURAL_FEATURE__ECONTAINING_CLASS, msgs)
	default:
		return eStructuralFeature.ETypedElementExt.EBasicInverseAdd(otherEnd, featureID, notifications)
	}
}

func (eStructuralFeature *EStructuralFeatureImpl) EBasicInverseRemove(otherEnd EObject, featureID int, notifications ENotificationChain) ENotificationChain {
	switch featureID {
	case ESTRUCTURAL_FEATURE__ECONTAINING_CLASS:
		return eStructuralFeature.EBasicSetContainer(nil, ESTRUCTURAL_FEATURE__ECONTAINING_CLASS, notifications)
	default:
		return eStructuralFeature.ETypedElementExt.EBasicInverseRemove(otherEnd, featureID, notifications)
	}
}
