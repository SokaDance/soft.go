// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/mock"
	"testing"
)

func discardMockEAttribute() {
	_ = assert.Equal
	_ = testing.Coverage
}

type mockEAttributeRun struct {
	mock.Mock
}

func (m *mockEAttributeRun) Run(args ...any) {
	m.Called(args...)
}

type mockConstructorTestingTmockEAttributeRun interface {
	mock.TestingT
	Cleanup(func())
}

// newMockEAttributeRun creates a new instance of mockEAttributeRun. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func newMockEAttributeRun(t mockConstructorTestingTmockEAttributeRun, args ...any) *mockEAttributeRun {
	mock := &mockEAttributeRun{}
	mock.Test(t)
	mock.On("Run", args...).Once()
	t.Cleanup(func() { mock.AssertExpectations(t) })
	return mock
}

// TestMockEAttributeGetEAttributeType tests method GetEAttributeType
func TestMockEAttributeGetEAttributeType(t *testing.T) {
	o := NewMockEAttribute(t)
	r := new(MockEDataType)
	m := newMockEAttributeRun(t)
	o.EXPECT().GetEAttributeType().Run(func() { m.Run() }).Return(r).Once()
	o.EXPECT().GetEAttributeType().Once().Return(func() EDataType { return r })
	assert.Equal(t, r, o.GetEAttributeType())
	assert.Equal(t, r, o.GetEAttributeType())
}

// TestMockEAttributeIsID tests method IsID
func TestMockEAttributeIsID(t *testing.T) {
	o := NewMockEAttribute(t)
	r := bool(true)
	m := newMockEAttributeRun(t)
	o.EXPECT().IsID().Run(func() { m.Run() }).Return(r).Once()
	o.EXPECT().IsID().Once().Return(func() bool { return r })
	assert.Equal(t, r, o.IsID())
	assert.Equal(t, r, o.IsID())
}

// TestMockEAttributeSetID tests method SetID
func TestMockEAttributeSetID(t *testing.T) {
	o := &MockEAttribute{}
	v := bool(true)
	o.On("SetID", v).Once()
	o.SetID(v)
	o.AssertExpectations(t)
}
