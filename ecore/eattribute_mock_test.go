// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func discardMockEAttribute() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEAttributeGetEAttributeType tests method GetEAttributeType
func TestMockEAttributeGetEAttributeType(t *testing.T) {
	o := NewMockEAttribute(t)
	r := new(MockEDataType)
	m := NewMockRun(t)
	o.EXPECT().GetEAttributeType().Return(r).Run(func() { m.Run() }).Once()
	o.EXPECT().GetEAttributeType().Call.Return(func() EDataType { return r }).Once()
	assert.Equal(t, r, o.GetEAttributeType())
	assert.Equal(t, r, o.GetEAttributeType())
}

// TestMockEAttributeIsID tests method IsID
func TestMockEAttributeIsID(t *testing.T) {
	o := NewMockEAttribute(t)
	r := bool(true)
	m := NewMockRun(t)
	o.EXPECT().IsID().Return(r).Run(func() { m.Run() }).Once()
	o.EXPECT().IsID().Call.Return(func() bool { return r }).Once()
	assert.Equal(t, r, o.IsID())
	assert.Equal(t, r, o.IsID())
}

// TestMockEAttributeSetID tests method SetID
func TestMockEAttributeSetID(t *testing.T) {
	o := NewMockEAttribute(t)
	v := bool(true)
	m := NewMockRun(t, v)
	o.EXPECT().SetID(v).Return().Run(func(_p0 bool) { m.Run(_p0) }).Once()
	o.SetID(v)
}
