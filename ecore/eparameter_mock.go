// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/mock"
)

type MockEParameter struct {
	MockETypedElement
}

type MockEParameter_Expecter struct {
	MockETypedElement_Expecter
}

func (eParameter *MockEParameter) EXPECT() *MockEParameter_Expecter {
	e := &MockEParameter_Expecter{}
	e.Mock = &eParameter.Mock
	return e
}

// GetEOperation get the value of eOperation
func (eParameter *MockEParameter) GetEOperation() EOperation {
	ret := eParameter.Called()

	var r EOperation
	if rf, ok := ret.Get(0).(func() EOperation); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EOperation)
		}
	}

	return r
}

type MockEParameter_GetEOperation_Call struct {
	*mock.Call
}

func (e *MockEParameter_Expecter) GetEOperation() *MockEParameter_GetEOperation_Call {
	return &MockEParameter_GetEOperation_Call{Call: e.Mock.On("GetEOperation")}
}

func (c *MockEParameter_GetEOperation_Call) Run(run func()) *MockEParameter_GetEOperation_Call {
	c.Call.Run(func(mock.Arguments) {
		run()
	})
	return c
}

func (c *MockEParameter_GetEOperation_Call) Return(eOperation EOperation) *MockEParameter_GetEOperation_Call {
	c.Call.Return(eOperation)
	return c
}

type mockConstructorTestingTNewMockEParameter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEParameter creates a new instance of MockEParameter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEParameter(t mockConstructorTestingTNewMockEParameter) *MockEParameter {
	mock := &MockEParameter{}
	mock.Mock.Test(t)
	t.Cleanup(func() { mock.AssertExpectations(t) })
	return mock
}
