// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func discardMockEModelElement() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEModelElementGetEAnnotations tests method GetEAnnotations
func TestMockEModelElementGetEAnnotations(t *testing.T) {
	o := NewMockEModelElement(t)
	l := NewMockEList(t)
	m := NewMockRun(t)
	o.EXPECT().GetEAnnotations().Return(l).Run(func() { m.Run() }).Once()
	o.EXPECT().GetEAnnotations().Call.Return(func() EList { return l }).Once()
	assert.Equal(t, l, o.GetEAnnotations())
	assert.Equal(t, l, o.GetEAnnotations())
}

// TestMockEModelElementGetEAnnotation tests method GetEAnnotation
func TestMockEModelElementGetEAnnotation(t *testing.T) {
	o := NewMockEModelElement(t)
	source := string("Test String")
	m := NewMockRun(t, source)
	r := NewMockEAnnotation(t)
	o.EXPECT().GetEAnnotation(source).Return(r).Run(func(source string) { m.Run(source) }).Once()
	o.EXPECT().GetEAnnotation(source).Call.Return(func() EAnnotation {
		return r
	}).Once()
	assert.Equal(t, r, o.GetEAnnotation(source))
	assert.Equal(t, r, o.GetEAnnotation(source))
}
