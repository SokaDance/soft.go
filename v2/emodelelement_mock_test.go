// Code generated by soft.generator.go. DO NOT EDIT.



package ecore

import (
	"testing"
	"github.com/stretchr/testify/assert"
)

func discardMockEModelElement() {
	_ = assert.Equal
	_ = testing.Coverage
}

// TestMockEModelElementGetEAnnotations tests method GetEAnnotations
func TestMockEModelElementGetEAnnotations(t *testing.T) {
	o := &MockEModelElement{}
	l := &MockEList[EAnnotation]{}
	// return a value
	o.On("GetEAnnotations").Once().Return(l)
	o.On("GetEAnnotations").Once().Return( func () EList[EAnnotation] {
		return l
	})	
	assert.Equal(t,l,o.GetEAnnotations())
	assert.Equal(t,l,o.GetEAnnotations())
	o.AssertExpectations(t)
}


// TestMockEModelElementGetEAnnotation tests method GetEAnnotation
func TestMockEModelElementGetEAnnotation(t *testing.T) {
	o := &MockEModelElement{}
	source := "Test String"
	r := &MockEAnnotation{}
	o.On("GetEAnnotation",source).Return(r).Once()	
	o.On("GetEAnnotation",source).Return( func () EAnnotation {
		return r
	}).Once()	
	assert.Equal(t , r, o.GetEAnnotation(source) )
	assert.Equal(t , r, o.GetEAnnotation(source) )
	o.AssertExpectations(t)
}


