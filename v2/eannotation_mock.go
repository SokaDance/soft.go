// Code generated by soft.generator.go. DO NOT EDIT.

package ecore

type MockEAnnotation struct {
	MockEModelElement
}

// GetContents get the value of contents
func (eAnnotation *MockEAnnotation) GetContents() EList[EObject] {
	ret := eAnnotation.Called()

	var r EList[EObject]
	if rf, ok := ret.Get(0).(func() EList[EObject]); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EList[EObject])
		}
	}

	return r
}

// GetDetails get the value of details
func (eAnnotation *MockEAnnotation) GetDetails() EMap[string, string] {
	ret := eAnnotation.Called()

	var r EMap[string, string]
	if rf, ok := ret.Get(0).(func() EMap[string, string]); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EMap[string, string])
		}
	}

	return r
}

// GetEModelElement get the value of eModelElement
func (eAnnotation *MockEAnnotation) GetEModelElement() EModelElement {
	ret := eAnnotation.Called()

	var r EModelElement
	if rf, ok := ret.Get(0).(func() EModelElement); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EModelElement)
		}
	}

	return r
}

// SetEModelElement provides mock implementation for setting the value of eModelElement
func (eAnnotation *MockEAnnotation) SetEModelElement(newEModelElement EModelElement) {
	eAnnotation.Called(newEModelElement)
}

// GetReferences get the value of references
func (eAnnotation *MockEAnnotation) GetReferences() EList[EObject] {
	ret := eAnnotation.Called()

	var r EList[EObject]
	if rf, ok := ret.Get(0).(func() EList[EObject]); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EList[EObject])
		}
	}

	return r
}

// GetSource get the value of source
func (eAnnotation *MockEAnnotation) GetSource() string {
	ret := eAnnotation.Called()

	var r string
	if rf, ok := ret.Get(0).(func() string); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(string)
		}
	}

	return r
}

// SetSource provides mock implementation for setting the value of source
func (eAnnotation *MockEAnnotation) SetSource(newSource string) {
	eAnnotation.Called(newSource)
}
